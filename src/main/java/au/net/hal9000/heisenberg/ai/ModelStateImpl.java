package au.net.hal9000.heisenberg.ai;

import au.net.hal9000.heisenberg.ai.api.ModelState;
import au.net.hal9000.heisenberg.units.Point3d;

/**
 * A very simple model state. It holds two positions, the agent and the goal.
 * 
 * @author bruins
 * @version $Revision: 1.0 $
 */
public class ModelStateImpl implements ModelState, Cloneable {

    /** The agent moving to goal. */
    private Point3d agentPosition;
    /** Where the agent wants to be. */
    private Point3d goalPosition;

    /**
     * Constructor.
     * 
     * @param agentPosition
     *            agent position.
     * @param goalPosition
     *            goal position.
     */
    public ModelStateImpl(Point3d agentPosition, Point3d goalPosition) {
        this.agentPosition = agentPosition;
        this.goalPosition = goalPosition;
    }

    @Override
    public Point3d getAgentPosition() {
        return agentPosition;
    }

    @Override
    public void setAgentPosition(Point3d position3d) {
        agentPosition = position3d;
    }

    @Override
    public Point3d getGoalPosition() {
        return goalPosition;
    }

    @Override
    public void setGoalPosition(Point3d position3d) {
        goalPosition = position3d;
    }

    @Override
    public ModelStateImpl clone() throws CloneNotSupportedException {
        ModelStateImpl newModeState = (ModelStateImpl) super.clone();
        newModeState.agentPosition = agentPosition.clone();
        newModeState.goalPosition = goalPosition.clone();
        return newModeState;
    }

    // Autogenerated
    /**
     * Method hashCode.
     * 
     * @return int
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result
                + ((null == agentPosition) ? 0 : agentPosition.hashCode());
        result = prime * result
                + ((null == goalPosition) ? 0 : goalPosition.hashCode());
        return result;
    }

    // Autogenerated
    /**
     * Method equals.
     * 
     * @param obj
     *            Object
     * @return boolean
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (null == obj) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        ModelStateImpl other = (ModelStateImpl) obj;
        if (null == agentPosition) {
            if (null != other.agentPosition) {
                return false;
            }
        } else if (!agentPosition.equals(other.agentPosition)) {
            return false;
        }
        if (null == goalPosition) {
            if (null != other.goalPosition) {
                return false;
            }
        } else if (!goalPosition.equals(other.goalPosition)) {
            return false;
        }
        return true;
    }

    /**
     * Method toString.
     * 
     * @return String
     */
    @Override
    public String toString() {
        return "[agent=" + agentPosition + ", goal=" + goalPosition + "]";
    }

}
